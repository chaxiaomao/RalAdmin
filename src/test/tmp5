import React from 'react'

class SideBar extends React.Component<any, any> {

    public _menuData = [
        {
            'id': 1,
            'name': '监控台',
            'url': '#',
            'is_selected': false,
            'icon': 'glyphicon glyphicon-home',
            'children': [
                {
                    'id': 11,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
                {
                    'id': 12,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
                {
                    'id': 13,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
            ],
        },
        {
            'id': 2,
            'name': '订单模块',
            'url': '#',
            'is_selected': false,
            'icon': 'glyphicon glyphicon-home',
            'children': [
                {
                    'id': 21,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
                {
                    'id': 22,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
                {
                    'id': 23,
                    'name': '设备',
                    'url': '#',
                    'is_selected': false,
                    'icon': 'glyphicon glyphicon-wrench'
                },
            ],
        },
        {
            'id': 3,
            'name': '配置',
            'url': '#',
            'is_selected': false,
            'icon': 'glyphicon glyphicon-cog',
            'children': [
                {
                    'id': 31,
                    'name': '设备',
                    'url': '#',
                'is_selected': false,
                    'icon': 'glyphicon glyphicon-cog'
                },
                {
                    'id': 32,
                    'name': '设备',
                    'url': '#',
                'is_selected': false,
                    'icon': 'glyphicon glyphicon-cog'
                },
                {
                    'id': 33,
                    'name': '设备',
                    'url': '#',
                'is_selected': false,
                    'icon': 'glyphicon glyphicon-cog'
                },
            ],
        },
        {
            'id': 4,
            'name': '帐号',
            'url': '#',
            'is_selected': false,
            'icon': 'glyphicon glyphicon-user',
            'children': [],
        },
    ];


    constructor(props) {
        super(props);
        this.state = {
            activeId: 0,
            isMenuExpanded: true,
        };
    }

    handleMenuView = () => {
        this.setState(prevState => ({
            isMenuExpanded: !prevState.isMenuExpanded,
        }));
    }

    onMenuItemClick(item) {
        item.is_selected = !item.is_selected;
        // this.setState(prevState => ({
        //     activeId: id,
        // }));
    }

    renderChildren = (item, index) => {
        const activeId = this.state.activeId;
        const isChildSelected = activeId == item.id ? 'active' : '';
        return (
            <li key={index}>
                <a children={isChildSelected} href={item.url} title={item.name} onClick={this.onMenuItemClick.bind(this, item.id)}>
                    <span className={'menu-icon ' + item.icon}></span>
                    <span>{item.name}</span>
                </a>
            </li>
        );
    };

    render() {

        ///
        const isExpanded = this.state.isMenuExpanded;
        const isMenuExpanded = isExpanded ? 'sidebar-menu-expanded' : 'sidebar-menu-collapsed';
        const isMenuItemExpanded = isExpanded ? '' : 'collapsed-element';

        return (
            // <nav className='sidebar sidebar-menu-collapsed'>
            <nav className={'sidebar ' + isMenuExpanded}>
                <div className='sidebar-head'>
                    <a href='#' onClick={this.handleMenuView} id='justify-icon'>
                        <span className='glyphicon glyphicon-align-justify'></span>
                    </a>
                </div>
                <ul>
                    {
                        this._menuData.map((item, index) => {

                            const activeId = this.state.activeId;
                            const isParentExpend = activeId == item.id ? 'icon-down' : 'icon-right';
                            const isChildExpend = activeId == item.id ? '' : 'collapsed-element';
                            const isParentSelected = activeId == item.id && item.children.length == 0 ? 'active' : '';

                            return (
                                <li key={index}>
                                    <a className={'expandable ' + isParentSelected} href={item.url} title={item.name} onClick={this.onMenuItemClick.bind(this, item)}>
                                        <span className={'menu-icon ' + item.icon}></span>
                                        <span className={isMenuItemExpanded}>{item.name}<span className={'menu-arrow-icon ' + isParentExpend}></span></span>
                                    </a>
                                    <ul className={'menu-sub ' + isChildExpend}>
                                        {item.children.map(this.renderChildren)}
                                    </ul>
                                </li>
                            );
                        })
                    }

                </ul>
            </nav>

        )
    }
}

export default SideBar